<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	id="WebApp_ID" version="2.5">
	<display-name>school</display-name>

	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
			classpath:applicationContext.xml,
			classpath:spring*.xml
		</param-value>
	</context-param>
	
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	

	<listener>
		<listener-class>com.twi.security.event.MySessionEventPublisher</listener-class>
	</listener>
	
	
	
	<filter>
		<filter-name>BrowserFilter</filter-name>
		<filter-class>com.twi.security.event.BrowserFilter</filter-class>
		<init-param>
			<param-name>Exempt</param-name>
			<param-value>/images/,/js/,/css/,/resource/</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>BrowserFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<!-- Hibernate Open Session In View filter -->
	<filter>
		<filter-name>hibernateOpenSessionInViewFilter</filter-name>
		<filter-class>org.springframework.orm.hibernate3.support.OpenSessionInViewFilter</filter-class>
		<init-param>
			<param-name>flushMode</param-name>
			<param-value>AUTO</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>hibernateOpenSessionInViewFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>hibernateOpenSessionInViewFilter</filter-name>
		<url-pattern>/**</url-pattern>
	</filter-mapping>
	
	
	
	<filter>   
    <filter-name>springSecurityFilterChain</filter-name>    
    <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>    
</filter>  
<filter-mapping>  
    <filter-name>springSecurityFilterChain</filter-name>  
    <url-pattern>/*</url-pattern>    
</filter-mapping>  
		
	
	<servlet>
		<servlet-name>school</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:applicationContext.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>school</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>
	
	<servlet-mapping>  
  <servlet-name>school</servlet-name>  
    <url-pattern>/index</url-pattern>  
  </servlet-mapping>  

	<welcome-file-list>  
  <welcome-file>index</welcome-file>  
</welcome-file-list>
	
	<filter>
		<display-name>LoginUsernamePasswordAuthenticationFilter</display-name>
		<filter-name>LoginUsernamePasswordAuthenticationFilter</filter-name>
		<filter-class>com.twi.security.LoginUsernamePasswordAuthenticationFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>LoginUsernamePasswordAuthenticationFilter</filter-name>
		<url-pattern>/LoginUsernamePasswordAuthenticationFilter</url-pattern>
	</filter-mapping>
	
	<error-page>
		<exception-type>java.lang.Throwable</exception-type>
		<location>/WEB-INF/views/error/500.jsp</location>
	</error-page>
	<error-page>
		<error-code>500</error-code>
		<location>/WEB-INF/views/error/500.jsp</location>
	</error-page>
	
</web-app>